#' tiempo completo y 0 si no.
#'
mat_nom_prof_total <- gen_mat_nom_prof_total()
sum(as.numeric(mat_nom_prof_total[,2]))#91
View(mat_nom_prof_total)
dim(mat_nom_prof_total)
#Source ------------------------------------------------------------------
#Se utiliza el comando source() para poder cargar todas las funciones que
#se encuentran en el archivo Fn_Asignación.
rm(list=ls())  # Borra variables
cat("\014") # Borra consola
#Se establece el directorio en el que se va a trabajar
setwd("C:/Users/miri_/Dropbox/Carpeta compartida MIri/Faculty_schedule_simulation/Hidden_files/Tesis/Programas/ProgFinal")
source("Fn_Asignacion.R")
install.packages("fitdistrplus")
vec_nom_materias_total <- param$vec_nom_materias_total
mat_nom_prof_total <- param$mat_nom_prof_total
dim(mat_nom_prof_total)
length(vec_nom_materias_total)
mat_1_solicitud <- data.frame(Profesor = 0, Materia = rep(0,6), Horario = 0)
mat_solicitudes <- data.frame(Profesor = 0, Materia = 0, Horario = 0)
vec_nom_materias_total
mat_nom_prof_total
m_grande_total = param$m_grande_total
# lista_def_columnas_MG <- param$lista_def_columnas_MG
num_col_Profesor <- arroja_ind_col_MG("Profesor")
num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_NomMat_Act2000 <- arroja_ind_col_MG("NomMat_Act2000")
num_col_NomMat_Act2006 <- arroja_ind_col_MG("NomMat_Act2006")
num_col_NomMat_Act2015 <- arroja_ind_col_MG("NomMat_Act2015")
num_col_NomMat_CdC1994 <- arroja_ind_col_MG("NomMat_CdC1994")
num_col_NomMat_CdC2013 <- arroja_ind_col_MG("NomMat_CdC2013")
num_col_NomMat_Mat1983 <- arroja_ind_col_MG("NomMat_Mat1983")
num_col_NomMat_MAp2017 <- arroja_ind_col_MG("NomMat_MAp2017")
num_col_Semestre <- arroja_ind_col_MG("Semestre")
num_col_Grupo <- arroja_ind_col_MG("Grupo")
mat_grupos_prof <- as.matrix(data.frame(m_grande_total[,num_col_Profesor],
m_grande_total[,num_col_Materia],
m_grande_total[,num_col_NomMat_Act2000],
m_grande_total[,num_col_NomMat_Act2006],
m_grande_total[,num_col_NomMat_Act2015],
m_grande_total[,num_col_NomMat_CdC1994],
m_grande_total[,num_col_NomMat_CdC2013],
m_grande_total[,num_col_NomMat_Mat1983],
m_grande_total[,num_col_NomMat_MAp2017],
m_grande_total[,num_col_Semestre],
m_grande_total[,num_col_Grupo]))
View(mat_grupos_prof)
mat_grupos <- mat_grupos_prof[mat_grupos_prof[,1]== profesor,2:11]
mat_num_grupos <- unique(mat_grupos)#Se eliminan los renglones repetidos
profesor <- "Arrigo Coen Coria"
mat_grupos <- mat_grupos_prof[mat_grupos_prof[,1]== profesor,2:11]
mat_num_grupos <- unique(mat_grupos)#Se eliminan los renglones repetidos
View(mat_num_grupos)
## Se pone el if porque si sólo hay un vector marca error al poner nombres
##a las columnas en un objeto que tiene dimensión menor a 2
if(length(mat_num_grupos)<11){
mat_num_grupos <- matrix(mat_num_grupos,ncol = 10)
}
colnames(mat_num_grupos) <- c("Materias","NomMat_1","NomMat_2",
"NomMat_3","NomMat_4","NomMat_5",
"NomMat_6","NomMat_7","Sem","Grupos")
## Se tienen 16 renglones porque se tienen 8 columnas con nombres
##para cada materia
materia_x_profesor <- matrix(0,nrow = 16,ncol = length(param$Semestres))
rownames(materia_x_profesor) <- c("Materia_1.0",
"Materia_1.1",
"Materia_1.2",
"Materia_1.3",
"Materia_1.4",
"Materia_1.5",
"Materia_1.6",
"Materia_1.7",
"Materia_2.0",
"Materia_2.1",
"Materia_2.2",
"Materia_2.3",
"Materia_2.4",
"Materia_2.5",
"Materia_2.6",
"Materia_2.7")
colnames(materia_x_profesor) <- param$nombre_sem
for(j in 1:length(param$Semestres)){
datos_x_sem <- mat_num_grupos[mat_num_grupos[,9]==param$Semestres[j],1:8]
if(length(datos_x_sem)==0){
materia_x_profesor[,j] <- 0
}else if(length(datos_x_sem)==8){
materia_x_profesor[1:8,j] <- datos_x_sem
materia_x_profesor[9:16,j] <- 0
}else{
materia_x_profesor[1:8,j] <- datos_x_sem[1,]
materia_x_profesor[9:16,j] <- datos_x_sem[2,]
}
}
View(materia_x_profesor)
param$m_grande_2015 = matrix(0,ncol = length(param$nom_cols_MG))
# param -------------------------------------------------------------------
param <- list()
param$sem_ini = 20081##Inicio de información real
param$sem_fin = 20201##Fin de información real
param$sem_sig = 20202##Semestre de simulación
param$sem_totales = (20081:20202)[(20081:20202)%% 10>0 &(20081:20202)%% 10<3]
param$Semestres = (param$sem_ini:param$sem_fin)[(param$sem_ini:param$sem_fin)
%% 10>0 &(param$sem_ini:param$sem_fin) %% 10<3]
param$nombre_sem = as.character(param$Semestres)
param$n_semestres_anteriores = length(param$Semestres)
param$Horas = c(7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)
param$nombre_hrs = c("7-8","8-9","9-10","10-11","11-12",
"12-13","13-14","14-15","15-16",
"16-17","17-18","18-19","19-20",
"20-21","21-22")
param$q1 = 85
param$q2 = 80
param$num_simula_eleccion_materia = 6
param$num_simula_eleccion_horario = 6
param$nom_cols_m14 = c("Materia","Profesor","Horario","Lugares",
"Alumnos","Salon","Grupo","Carrera","Plan",
"Semestre","Cambios","Turno",
"Semestre_de_materia","url")
param$nom_cols_MG = c("Materia","Profesor","Horario","horario_num",
"Lugares","Alumnos","Salon","Grupo","Carrera",
"Plan","Semestre","Cambios","Turno",
"Semestre_de_materia","url","Act2000","Act2006",
"Act2015","CdC1994","CdC2013","Mat1983","MAp2017",
"NomMat_Act2000","NomMat_Act2006","NomMat_Act2015",
"NomMat_CdC1994","NomMat_CdC2013","NomMat_Mat1983",
"NomMat_MAp2017","URL_Act2000","URL_Act2006",
"URL_Act2015","URL_CdC1994","URL_CdC2013",
"URL_Mat1983","URL_MAp2017","Num_materia")
param$m_grande_total = matrix(0,ncol = length(param$nom_cols_MG))
param$m_grande_2015 = matrix(0,ncol = length(param$nom_cols_MG))
param$vec_nom_materias_total = 0
param$mat_nom_prof_total = 0
load(file = paste0("Matrices m_grande_total/m_grande_total_",
param$sem_ini,"_",param$sem_fin,".RData"))
param$m_grande_total = m_grande_total
load(file = "vec_nom_materias_total.RData")
param$vec_nom_materias_total = vec_nom_materias_total
load(file = "mat_nom_prof_total.RData")
param$mat_nom_prof_total = mat_nom_prof_total
load("Matrices m_grande_total/m_grande_total_20151_20201.RData")
param$m_grande_2015 = m_grande_total
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total#333
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015
dim((m_grande_2015))
#Se definen las variables que se van a utilizar
num_col_Profesor <- arroja_ind_col_MG("Profesor")
mat_1_prof <- m_grande_2015[m_grande_2015[,num_col_Profesor],]
View(mat_1_prof)
load("Matrices m_grande_total/m_grande_total_20151_20201.RData")
View(m_grande_total)
#Se definen las variables que se van a utilizar
num_col_Profesor <- arroja_ind_col_MG("Profesor")
vec_nom_materias_total <- param$vec_nom_materias_total#333
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
View(m_grande_2015)
p <- 1
mat_nom_prof_total[p,1]
nom_prof <- mat_nom_prof_total[p,1]
View(m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,])
any(is.na(m_grande_2015))
any(m_grande_2015==0)
#Se definen las variables que se van a utilizar
num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_Materia
num_col_Profesor <- arroja_ind_col_MG("Profesor")
vec_nom_materias_total <- param$vec_nom_materias_total#333
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
## Se quitan los renglones de ceros y los renglones con NA
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Materia]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Materia]),]
dim(m_grande_2015)
num_col_Materia
dim(mat_nom_prof_total)[1]
mat_nom_prof_total[p,1]
View(m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,])
#Se definen las variables que se van a utilizar
# num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_Profesor <- arroja_ind_col_MG("Profesor")
vec_nom_materias_total <- param$vec_nom_materias_total#333
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
#' Se quitan los renglones de ceros y los renglones con NA en la
#' columna de "Profesor"
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Profesor]),]
dim(m_grande_2015)
m_grande_2015 <- param$m_grande_2015#8409 37
#' Se quitan los renglones de ceros, con NA o vaciós en la
#' columna de "Profesor"
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!="",]
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Profesor]),]
dim(m_grande_2015)
p <- 1
mat_nom_prof_total[p,1]
nom_prof <- mat_nom_prof_total[p,1]
mat_1_prof <- m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,]
View(mat_1_prof)
#Se definen las variables que se van a utilizar
num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_Profesor <- arroja_ind_col_MG("Profesor")
num_col_horario_num <- arroja_ind_col_MG("horario_num")##4
num_col_NomMat_Act2000 <- arroja_ind_col_MG("NomMat_Act2000")##23
num_col_NomMat_Act2006 <- arroja_ind_col_MG("NomMat_Act2006")##24
num_col_NomMat_Act2015 <- arroja_ind_col_MG("NomMat_Act2015")##25
num_col_NomMat_CdC1994 <- arroja_ind_col_MG("NomMat_CdC1994")##26
num_col_NomMat_CdC2013 <- arroja_ind_col_MG("NomMat_CdC2013")##27
num_col_NomMat_Mat1983 <- arroja_ind_col_MG("NomMat_Mat1983")##28
num_col_NomMat_MAp2017 <- arroja_ind_col_MG("NomMat_MAp2017")##29
arroja_ind_col_MG("Num_materia")##37
#Se definen las variables que se van a utilizar
# num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_Profesor <- arroja_ind_col_MG("Profesor")
num_col_NumMateria <- arroja_ind_col_MG("Num_materia")##37
num_col_horario_num <- arroja_ind_col_MG("horario_num")##4
#Se definen las variables que se van a utilizar
# num_col_Materia <- arroja_ind_col_MG("Materia")
num_col_Profesor <- arroja_ind_col_MG("Profesor")
num_col_horario_num <- arroja_ind_col_MG("horario_num")##4
num_col_NumMateria <- arroja_ind_col_MG("Num_materia")##37
vec_nom_materias_total <- param$vec_nom_materias_total#333
# mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
m_grande_2015 <- param$m_grande_2015#8409 37
#' Se quitan los renglones de ceros, con NA o vaciós en la
#' columna de "Profesor"
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!="",]
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Profesor]),]
param$m_grande_2015 = m_grande_2015#8393 37 ############
# mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
dim(m_grande_2015)
8409-8393
mat_1_prof <- m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,]
materias_prof <- mat_1_prof[,num_col_NumMateria]
num_materias_prof <- mat_1_prof[,num_col_NumMateria]
materias_num_prof <- mat_1_prof[,num_col_NumMateria]
horas_prof <- mat_1_prof[,num_col_horario_num]
materias_num_prof
horas_prof
mat_nom_prof_total
names(mat_nom_prof_total)
View(mat_nom_prof_total)
mat_1_solicitud <- data.frame(Profesor = 0,TC = 0, Materia = rep(0,6), Horario = 0)
mat_1_solicitud
mat_1_solicitud <- data.frame(Profesor = nom_prof,TC = 0, Materia = rep(0,6), Horario = 0)
head(mat_nom_prof_total)
tipo_prof <- 0
#Se llena las primeras 2 columnas
mat_1_solicitud[,1] <- nom_prof
mat_1_solicitud[,2] <- tipo_prof
mat_1_solicitud
materias_num_prof
#Se definen las variables con la información de "nom_prof"
mat_1_prof <- m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,]
materias_num_prof <- unique(mat_1_prof[,num_col_NumMateria])
horas_prof <- unique(mat_1_prof[,num_col_horario_num])
materias_num_prof
horas_prof
length(materias_num_prof)>2
vec_nom_materias_total[materias_num_prof[1]]
vec_nom_materias_total[materias_num_prof[2]]
mat_1_solicitud[1:3,3] <- vec_nom_materias_total[materias_num_prof[1]]
mat_1_solicitud[4:6,3] <- vec_nom_materias_total[materias_num_prof[2]]
mat_1_solicitud
sample(materias_num_prof,size = 2)
length(horas_prof)==2
horas_prof
mat_1_solicitud[c(1:2,4:5),4] <- vec_nom_materias_total[horas_prof[1]]
mat_1_solicitud[c(3,6),4] <- vec_nom_materias_total[horas_prof[2]]
mat_1_solicitud
rof[1]
mat_1_solicitud[c(3,6),4] <- horas_prof[
mat_1_solicitud[c(1:2,4:5),4] <- horas_prof[1]
mat_1_solicitud[c(3,6),4] <- horas_prof[2]
c(1:2,4:5)
horas_prof
mat_1_solicitud[c(1:2,4:5),4]
horas_prof[1]
mat_1_solicitud[c(1:2,4:5),4] <- horas_prof[1]
mat_1_solicitud[c(3,6),4] <- horas_prof[2]
mat_1_solicitud
View(mat_solicitudes)
View(mat_1_solicitud)
#Se definen las variables que se van a utilizar
num_col_Profesor <- arroja_ind_col_MG("Profesor")
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
mat_solicitudes <- data.frame(Profesor = 0,TC = 0, Materia = 0,
Horario = 0)
#' Se quitan los renglones de ceros, con NA o vaciós en la
#' columna de "Profesor"
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!="",]
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Profesor]),]
# dim(m_grande_2015)#8393 37
param$m_grande_2015 = m_grande_2015#8393 37 ############
#Recorre el nombre de los profesores de la matriz "mat_nom_prof_total"
for(p in 1:dim(mat_nom_prof_total)[1]){
nom_prof <- mat_nom_prof_total[p,1]
tipo_prof <- mat_nom_prof_total[p,2]
mat_1_solicitud <- gen_solicitudes_1_profesor(nom_prof,tipo_prof,param)
mat_solicitudes <- rbind(mat_solicitudes,mat_1_solicitud)
}
# gen_solicitudes_1_profesor ----------------------------------------------
#' Title gen_solicitudes_1_profesor: Función que genera la solicitud de
#' un solo profesor. Arroja la matriz "mat_1_solicitud" de 4 columnas
#' (Profesor,TC,Materia, Horario) y 6 renglones que tiene la información de
#' la solicitud de "nom_prof". Se eligen 2 materias y hasta 3 diferentes
#' horarios.
#'
#' @param nom_prof: Nombre del profesor del que se va a obtener la solicitud.
#' @param tipo_prof: Variable binaria que vale 1 si el profesor es de
#' tiempo completo y cero si no.
#' @param param: Lista con los diferentes parámetros que se utilizan en las
#' funciones que se mandan llamar.
#'
#' @example param <- list(nombre_hrs = c("7-8","8-9"),nombre_sem = c("2015-1",
#' "2015-2"),Semestres = c(20192,20201),Horas = c(7,8,9,10),q1 = 80, q2 = 90)
#'
#' @return mat_1_solicitud: Matriz de 4 columnas (Profesor,TC,Materia,
#' Horario) y 6 renglones que tiene la información de la solicitud de
#' "nom_prof". Se eligen 2 materias y hasta 3 diferentes horarios.
#'
#' @examples
#' mat_1_solicitud <- gen_solicitudes_1_profesor("Arrigo Coen",0,param)
#' mat_1_solicitud <- gen_solicitudes_1_profesor("Margarita Chávez",1,param)
#'
gen_solicitudes_1_profesor <- function(nom_prof,tipo_prof,param){
#Se definen las variables que se van a utilizar
num_col_Profesor <- arroja_ind_col_MG("Profesor")
num_col_horario_num <- arroja_ind_col_MG("horario_num")##4
num_col_NumMateria <- arroja_ind_col_MG("Num_materia")##37
vec_nom_materias_total <- param$vec_nom_materias_total#333
m_grande_2015 <- param$m_grande_2015#8393 37
mat_1_solicitud <- data.frame(Profesor = 0,TC = 0, Materia = rep(0,6),
Horario = 0)
#Se definen las variables con la información de "nom_prof"
mat_1_prof <- m_grande_2015[m_grande_2015[,num_col_Profesor]==nom_prof,]
materias_num_prof <- unique(mat_1_prof[,num_col_NumMateria])
horas_prof <- unique(mat_1_prof[,num_col_horario_num])
#Se llena las primeras 2 columnas
mat_1_solicitud[,1] <- nom_prof
mat_1_solicitud[,2] <- tipo_prof
#Se llena la columna "Materia"
if(length(materias_num_prof)==2){
mat_1_solicitud[1:3,3] <- vec_nom_materias_total[materias_num_prof[1]]
mat_1_solicitud[4:6,3] <- vec_nom_materias_total[materias_num_prof[2]]
}else if(length(materias_num_prof)==1){
mat_1_solicitud[,3] <- vec_nom_materias_total[materias_num_prof]
}else if(length(materias_num_prof)>2){
muestra_materias <- sample(materias_num_prof,size = 2)
mat_1_solicitud[1:3,3] <- vec_nom_materias_total[muestra_materias[1]]
mat_1_solicitud[4:6,3] <- vec_nom_materias_total[muestra_materias[2]]
}
#Se llena la columna "Horario"
#' A lo más van a tener 3 horas diferentes
if(length(horas_prof)==3){
mat_1_solicitud[c(1,4),4] <- horas_prof[1]
mat_1_solicitud[c(2,5),4] <- horas_prof[2]
mat_1_solicitud[c(3,6),4] <- horas_prof[3]
}else if(length(horas_prof)==2){
mat_1_solicitud[c(1:2,4:5),4] <- horas_prof[1]
mat_1_solicitud[c(3,6),4] <- horas_prof[2]
}else if(length(horas_prof)==1){
mat_1_solicitud[,4] <- horas_prof
}else if(length(horas_prof)>3){
muestra_horas <- sample(horas_prof,size = 3)
mat_1_solicitud[c(1,4),4] <- muestra_horas[1]
mat_1_solicitud[c(2,5),4] <- muestra_horas[2]
mat_1_solicitud[c(3,6),4] <- muestra_horas[3]
}
return(mat_1_solicitud)
}
#Recorre el nombre de los profesores de la matriz "mat_nom_prof_total"
for(p in 1:dim(mat_nom_prof_total)[1]){
nom_prof <- mat_nom_prof_total[p,1]
tipo_prof <- mat_nom_prof_total[p,2]
mat_1_solicitud <- gen_solicitudes_1_profesor(nom_prof,tipo_prof,param)
mat_solicitudes <- rbind(mat_solicitudes,mat_1_solicitud)
}
#Se quita el renglón inicial de ceros
mat_solicitudes <- mat_solicitudes[mat_solicitudes[,1]!=0,]
View(mat_solicitudes)
View(unique(mat_solicitudes))
#Se deja la matriz sin repeticiones
mat_solicitudes <- unique(mat_solicitudes)#4792
# gen_solicitudes_1_profesor ----------------------------------------------
#' Title gen_solicitudes_1_profesor: Función que genera la solicitud de
#' un solo profesor. Arroja la matriz "mat_1_solicitud" de 4 columnas
#' (Profesor,TC,Materia, Horario) y 6 renglones que tiene la información de
#' la solicitud de "nom_prof". Se eligen 2 materias y hasta 3 diferentes
#' horarios.
#'
nom_prof<- "Arrigo Coen Coria"
tipo_prof <- 0
gen_solicitudes_1_profesor(nom_prof,tipo_prof,param)
nom_prof<- "Margarita Elvira Chávez Cano"
tipo_prof <- 1
gen_solicitudes_1_profesor(nom_prof,tipo_prof,param)
# gen_solicitudes ---------------------------------------------------------
#' Title gen_solicitudes: Función que genera la solicitud de todos los
#' profesores en la matriz "mat_nom_prof_total". Arroja la matriz
#' "mat_solicitudes" de 4 columnas (Profesor,TC,Materia, Horario). Tiene la
#' información de las solicitudes de los profesores. Se eligen hasta dos
#' materias y hasta 3 diferentes horarios. Se quitan los renglones repetidos.
#'
mat_solicitudes <- gen_solicitudes(param)
source("Fn_Asignacion.R")
install.packages("fitdistrplus")
# gen_solicitudes ---------------------------------------------------------
#' Title gen_solicitudes: Función que genera la solicitud de todos los
#' profesores en la matriz "mat_nom_prof_total". Arroja la matriz
#' "mat_solicitudes" de 4 columnas (Profesor,TC,Materia, Horario). Tiene la
#' información de las solicitudes de los profesores. Se eligen hasta dos
#' materias y hasta 3 diferentes horarios. Se quitan los renglones repetidos.
#'
mat_solicitudes <- gen_solicitudes(param)
View(mat_solicitudes)
# gen_solicitudes ---------------------------------------------------------
#' Title gen_solicitudes: Función que genera la solicitud de todos los
#' profesores en la matriz "mat_nom_prof_total". Arroja la matriz
#' "mat_solicitudes" de 4 columnas (Profesor,TC,Materia, Horario). Tiene la
#' información de las solicitudes de los profesores. Se eligen hasta dos
#' materias y hasta 3 diferentes horarios. Se quitan los renglones repetidos.
#'
#' @param param: Lista con los diferentes parámetros que se utilizan en las
#' funciones que se mandan llamar.
#'
#' @example param <- list(nombre_hrs = c("7-8","8-9"),nombre_sem = c("2015-1",
#' "2015-2"),Semestres = c(20192,20201),Horas = c(7,8,9,10),q1 = 80, q2 = 90)
#'
#' @return mat_solicitudes: Matriz de 4 columnas (Profesor,TC,Materia,
#' Horario). Tiene la información de las solicitudes de los profesores. Se
#' eligen hasta dos materias y hasta 3 diferentes horarios. Se quitan los
#' renglones repetidos.
#'
#' @examples
#' mat_solicitudes <- gen_solicitudes(param)
#'
gen_solicitudes <- function(param){
# Start the clock!
ptm <- proc.time()
#Se definen las variables que se van a utilizar
num_col_Profesor <- arroja_ind_col_MG("Profesor")
mat_nom_prof_total <- param$mat_nom_prof_total#1387 2
m_grande_2015 <- param$m_grande_2015#8409 37
mat_solicitudes <- data.frame(Profesor = 0,TC = 0, Materia = 0,
Horario = 0)
#' Se quitan los renglones de ceros, con NA o vaciós en la
#' columna de "Profesor"
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!="",]
m_grande_2015 <- m_grande_2015[m_grande_2015[,num_col_Profesor]!=0,]
m_grande_2015 <- m_grande_2015[!is.na(m_grande_2015[,num_col_Profesor]),]
# dim(m_grande_2015)#8393 37
param$m_grande_2015 = m_grande_2015#8393 37
#Recorre el nombre de los profesores de la matriz "mat_nom_prof_total"
for(p in 1:dim(mat_nom_prof_total)[1]){
nom_prof <- mat_nom_prof_total[p,1]
tipo_prof <- mat_nom_prof_total[p,2]
mat_1_solicitud <- gen_solicitudes_1_profesor(nom_prof,tipo_prof,param)
mat_solicitudes <- rbind(mat_solicitudes,mat_1_solicitud)
}
#Se quita el renglón inicial de ceros
mat_solicitudes <- mat_solicitudes[mat_solicitudes[,1]!=0,]#8322
#Se deja la matriz sin repeticiones
mat_solicitudes <- unique(mat_solicitudes)#4792
cat("La función gen_solicitudes se tardó: ",(proc.time()-ptm)[3]," segundos\n\n\n" )
return(mat_solicitudes)
}
# gen_solicitudes ---------------------------------------------------------
#' Title gen_solicitudes: Función que genera la solicitud de todos los
#' profesores en la matriz "mat_nom_prof_total". Arroja la matriz
#' "mat_solicitudes" de 4 columnas (Profesor,TC,Materia, Horario). Tiene la
#' información de las solicitudes de los profesores. Se eligen hasta dos
#' materias y hasta 3 diferentes horarios. Se quitan los renglones repetidos.
#'
mat_solicitudes <- gen_solicitudes(param)
View(mat_solicitudes)
View(mat_solicitudes)
View(mat_solicitudes)
#Se definen las variables que vamos a utilizar
mat_demanda_alumnos <- matrix(0,nrow = length(param$nombre_hrs),
ncol = length(param$vec_nom_materias_total))
#' 1) Extracción de datos y simulación de alumnos de t+1
vec_s_sem_k_info <- gen_vec_s_sem_k_info(param_sim$vec_sem_sig,
param_sim$k_sem_ant,param)
# Start the clock!
ptm <- proc.time()
for(d in 1:length(param$vec_nom_materias_total)){
materia <- param$vec_nom_materias_total[d]
cat("\n materia ",d,":",materia)
param_sim$Materias = materia
param_sim$m_filtrada <- gen_mat_m_filtrada(param,param_sim)
mat_alumnos_corregidos <- gen_mat_alumnos_corregidos(vec_s_sem_k_info,
param,param_sim)
vec_alum_sim <- simula_alumnos(mat_alumnos_corregidos,param)
mat_demanda_alumnos[,d] <- vec_alum_sim
}
cat("\nEl proceso tardó: ",(proc.time()-ptm)[3]," segundos\n")##45.97
rownames(mat_demanda_alumnos) <- param$nombre_hrs
colnames(mat_demanda_alumnos) <- param$vec_nom_materias_total
View(mat_demanda_alumnos)
#' 2) Simulación de solicitudes de profesores de t+1 (oculta)
mat_solicitudes <- gen_solicitudes(param)#8.56 seg
View(mat_solicitudes)
