if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 2
}
}
pena_x_materia <- -pena_x_materia
pena_x_materia
#' Si hay alumnos que necesitan una clase a alguna hora y no
#' existe profesor que la imparta
# media_alum <- 34.18746
mat_solicitudes <- rbind(mat_solicitudes_TC,mat_solicitudes_asignatura)
View(mat_solicitudes)
dim(mat_solicitudes)
mat_i_j <- matrix(0,nrow = dim(mat_solicitudes)[1],ncol = 2)
head(mat_solicitudes)
mat_i_j <- matrix(0,nrow = dim(mat_solicitudes)[1],ncol = 2)
for(r in 1:dim(mat_solicitudes)[1]){#Recorre los renglones
ind_hora <- which(7:21 == mat_solicitudes[r,5])
mat_i_j[r,] <- c(ind_hora,mat_solicitudes[r,4])
}
view(mat_i_j)
View(mat_i_j)
colnames(mat_i_j) <- c("i","j")
View(mat_i_j)
pena_alum_sin_clase <- 0
dim(mat_i_j)
r <- 1
mat_i_j[r,1]
mat_i_j[r,2]
mat_demanda_aux[mat_i_j[r,1],mat_i_j[r,2]]
for(r in 1:dim(mat_i_j)[1]){
if(mat_demanda_aux[mat_i_j[r,1],mat_i_j[r,2]] > 0){
pena_alum_sin_clase <- pena_alum_sin_clase + 1
}
}
pena_alum_sin_clase <- -pena_alum_sin_clase
pena_alum_sin_clase
# califica_esqueleto ------------------------------------------------------
califica_esqueleto <- function(mat_demanda_alumnos,lista_info_esqueleto,
param){
#Se definen las variables que se van a utilizar
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
num_alum_simulados <- lista_info_esqueleto[[7]]
calif_esqueleto <- 0
#Penalización por no tener en el esqueleto una materia que necesitamos
materias_no_impartidas <- 0
nom_materias_no_impartidas <- 0
for(c in 1:dim(mat_esqueleto)[2]){#Se recorren las columnas
suma_col <- sum(mat_demanda_alumnos[,c])
if(suma_col!=0 && sum(mat_demanda_aux[,c])>=suma_col){
materias_no_impartidas <- materias_no_impartidas + 1
nom_materias_no_impartidas <- c(nom_materias_no_impartidas,
vec_nom_materias_total[c])
cat("\n No fue impartida la materia: ",vec_nom_materias_total[c])
}
}
Lmateria <- -materias_no_impartidas
#Quitamos el cero inicial
# nom_materias_no_impartidas <- nom_materias_no_impartidas[-1]
# cat("\n Las materias no impartidas son: ",nom_materias_no_impartidas)
#Penalización por cada alumno faltante
alfa <- 0.5
num_alum_faltantes <- sum(mat_demanda_aux)
pena_faltantes <- -alfa*num_alum_faltantes
#Penalización por cada alumno sobrante
beta <- 0.8
alum_con_gpo <- sum(mat_demanda_alumnos)-sum(mat_demanda_aux)
num_alum_sobrantes <- max(0,num_alum_simulados-alum_con_gpo)
pena_sobrantes <- -beta*num_alum_sobrantes
#' Si algún profesor de tiempo completo pidió alguna materia y
#' no se la dieron.
#'
#' Notas:
#' 1) Se cuenta por materia solicitada, no por materia con
#' horario. Ej. Si se pidió Proba I a las 10hrs y a las 11hrs,
#' sólo se cuenta una penalización.
#' 2) Se penaliza por cada materia con tope a 2 asignaciones,
#' i.e. si un profesor pidió 3 materias y sólo le dieron 1,
#' entonces se penaliza 1; si le dieron 2 entonces no hay
#' penalización.
# mat_prof_TC_menor_2 <- mat_prof_TC[mat_prof_TC[,2]<=1,]
# mat_solicitudes_TC_aux <- unique(mat_solicitudes_TC[,c(1,3,4)])
pena_x_materia <- 0
# pena_2_materias <- 0
mat_prof_TC_igual_1 <- mat_prof_TC[mat_prof_TC[,2]==1,]
mat_prof_TC_igual_0 <- mat_prof_TC[mat_prof_TC[,2]==0,]
## Una materia
for(r in 1:dim(mat_prof_TC_igual_1)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_1[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 1
}
}
## Dos materias
for(r in 1:dim(mat_prof_TC_igual_0)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_0[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 2
}
}
pena_x_materia <- -pena_x_materia
#' Si hay alumnos que necesitan una clase a alguna hora y no
#' existe profesor que la imparta
# media_alum <- 34.18746
mat_solicitudes <- rbind(mat_solicitudes_TC,mat_solicitudes_asignatura)
mat_i_j <- matrix(0,nrow = dim(mat_solicitudes)[1],ncol = 2)
pena_alum_sin_clase <- 0
for(r in 1:dim(mat_solicitudes)[1]){#Recorre los renglones
ind_hora <- which(7:21 == mat_solicitudes[r,5])
mat_i_j[r,] <- c(ind_hora,mat_solicitudes[r,4])
}
colnames(mat_i_j) <- c("i","j")
for(r in 1:dim(mat_i_j)[1]){
if(mat_demanda_aux[mat_i_j[r,1],mat_i_j[r,2]] > 0){
pena_alum_sin_clase <- pena_alum_sin_clase + 1
}
}
pena_alum_sin_clase <- -pena_alum_sin_clase
calif_esqueleto <- sum(Lmateria,pena_faltantes,pena_sobrantes,
pena_x_materia,pena_alum_sin_clase)
return(calif_esqueleto)
}
(calif_esqueleto <- califica_esqueleto(lista_info_esqueleto))
# califica_esqueleto ------------------------------------------------------
califica_esqueleto <- function(mat_demanda_alumnos,lista_info_esqueleto){
# califica_esqueleto <- function(mat_demanda_alumnos,lista_info_esqueleto,
# param){
#Se definen las variables que se van a utilizar
# vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
num_alum_simulados <- lista_info_esqueleto[[7]]
calif_esqueleto <- 0
#Penalización por no tener en el esqueleto una materia que necesitamos
materias_no_impartidas <- 0
nom_materias_no_impartidas <- 0
for(c in 1:dim(mat_esqueleto)[2]){#Se recorren las columnas
suma_col <- sum(mat_demanda_alumnos[,c])
if(suma_col!=0 && sum(mat_demanda_aux[,c])>=suma_col){
materias_no_impartidas <- materias_no_impartidas + 1
# nom_materias_no_impartidas <- c(nom_materias_no_impartidas,
#                                 vec_nom_materias_total[c])
# cat("\n No fue impartida la materia: ",vec_nom_materias_total[c])
}
}
Lmateria <- -materias_no_impartidas
#Quitamos el cero inicial
# nom_materias_no_impartidas <- nom_materias_no_impartidas[-1]
# cat("\n Las materias no impartidas son: ",nom_materias_no_impartidas)
#Penalización por cada alumno faltante
alfa <- 0.5
num_alum_faltantes <- sum(mat_demanda_aux)
pena_faltantes <- -alfa*num_alum_faltantes
#Penalización por cada alumno sobrante
beta <- 0.8
alum_con_gpo <- sum(mat_demanda_alumnos)-sum(mat_demanda_aux)
num_alum_sobrantes <- max(0,num_alum_simulados-alum_con_gpo)
pena_sobrantes <- -beta*num_alum_sobrantes
#' Si algún profesor de tiempo completo pidió alguna materia y
#' no se la dieron.
#'
#' Notas:
#' 1) Se cuenta por materia solicitada, no por materia con
#' horario. Ej. Si se pidió Proba I a las 10hrs y a las 11hrs,
#' sólo se cuenta una penalización.
#' 2) Se penaliza por cada materia con tope a 2 asignaciones,
#' i.e. si un profesor pidió 3 materias y sólo le dieron 1,
#' entonces se penaliza 1; si le dieron 2 entonces no hay
#' penalización.
# mat_prof_TC_menor_2 <- mat_prof_TC[mat_prof_TC[,2]<=1,]
# mat_solicitudes_TC_aux <- unique(mat_solicitudes_TC[,c(1,3,4)])
pena_x_materia <- 0
# pena_2_materias <- 0
mat_prof_TC_igual_1 <- mat_prof_TC[mat_prof_TC[,2]==1,]
mat_prof_TC_igual_0 <- mat_prof_TC[mat_prof_TC[,2]==0,]
## Una materia
for(r in 1:dim(mat_prof_TC_igual_1)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_1[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 1
}
}
## Dos materias
for(r in 1:dim(mat_prof_TC_igual_0)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_0[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 2
}
}
pena_x_materia <- -pena_x_materia
#' Si hay alumnos que necesitan una clase a alguna hora y no
#' existe profesor que la imparta
# media_alum <- 34.18746
mat_solicitudes <- rbind(mat_solicitudes_TC,mat_solicitudes_asignatura)
mat_i_j <- matrix(0,nrow = dim(mat_solicitudes)[1],ncol = 2)
pena_alum_sin_clase <- 0
for(r in 1:dim(mat_solicitudes)[1]){#Recorre los renglones
ind_hora <- which(7:21 == mat_solicitudes[r,5])
mat_i_j[r,] <- c(ind_hora,mat_solicitudes[r,4])
}
colnames(mat_i_j) <- c("i","j")
for(r in 1:dim(mat_i_j)[1]){
if(mat_demanda_aux[mat_i_j[r,1],mat_i_j[r,2]] > 0){
pena_alum_sin_clase <- pena_alum_sin_clase + 1
}
}
pena_alum_sin_clase <- -pena_alum_sin_clase
calif_esqueleto <- sum(Lmateria,pena_faltantes,pena_sobrantes,
pena_x_materia,pena_alum_sin_clase)
return(calif_esqueleto)
}
(calif_esqueleto <- califica_esqueleto(mat_demanda_alumnos,lista_info_esqueleto))
#Source ------------------------------------------------------------------
#Se utiliza el comando source() para poder cargar todas las funciones que
#se encuentran en el archivo Fn_Asignación.
rm(list=ls())  # Borra variables
cat("\014") # Borra consola
#Se establece el directorio en el que se va a trabajar
setwd("C:/Users/miri_/Dropbox/Carpeta compartida MIri/Faculty_schedule_simulation/Hidden_files/Tesis/Programas/ProgFinal")
source("Fn_Asignacion.R")
install.packages("fitdistrplus")
raiz <- "http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/"
# Actuaría ----------------------------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/2017
# div > a #Código SelectorGadget Selecciona 96 materias
url <- paste0(raiz,2017)
# Sacamos la información de la página
webpage <- read_html(url)
materias_act_data_html <- html_nodes(webpage,'div > a')#Selecciona 91 materias
materias_act <- html_text(materias_act_data_html)
materias_act
#Quitamos las entradas vacías
materias_act <- materias_act[materias_act!=""]
materias_act
# Quitamos entradas con FB TWITTER ...
materias_act <- materias_act[1:90]
materias_act
length(materias_act)
num_char <- nchar(materias_act[d])
d <- 1
num_char <- nchar(materias_act[d])
d <- 90
num_char <- nchar(materias_act[d])
num_char
substr(materias_act[d],(num_char-5),num_char)
substr(materias_act[d],(num_char-4),num_char)
d <- 87
substr(materias_act[d],(num_char-5),num_char)
num_char <- nchar(materias_act[d])
texto <- substr(materias_act[d],(num_char-5),num_char)
substr(materias_act[d],(num_char-5),num_char)
substr(materias_act[d],(num_char-4),num_char)
d <- 90
substr(materias_act[d],1,(num_char-9))
num_char <- nchar(materias_act[d])
texto <- substr(materias_act[d],(num_char-5),num_char)
substr(materias_act[d],1,(num_char-9))
substr(materias_act[d],(num_char-5),num_char)
num_char
substr(materias_act[d],1,(num_char-10))
materias_act
nchar(, 4 grupos)
nchar(", 4 grupos")
# Quitamos el número de grupos por materia
for(d in 1:length(materias_act)){
num_char <- nchar(materias_act[d])
texto <- substr(materias_act[d],(num_char-5),num_char)
if(texto==" grupo" || texto=="grupos"){#Menores a 10
materias_act[d] <- substr(materias_act[d],1,(num_char-10))
}
}#Fin for(d)
materias_act
d
d <- 1
num_char <- nchar(materias_act[d])
substr(materias_act[d],num_char,num_char)
substr(materias_act[d],1,(num_char-1))
#Quitamos las comas finales
for(d in 1:length(materias_act)){
num_char <- nchar(materias_act[d])
texto <- substr(materias_act[d],num_char,num_char)
if(texto==","){
materias_act[d] <- substr(materias_act[d],1,(num_char-1))
}
}#Fin for(d)
materias_act
save(materias_act, file = paste0("materias_act.RData"))
# Ciencias de la Computación ----------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/1556
# div > a#Selecciona 83 materias
url <- paste0(raiz,1556)
# Sacamos la información de la página
webpage <- read_html(url)
materias_CdC_data_html <- html_nodes(webpage,'div > a')#Selecciona 78 materias
materias_CdC <- html_text(materias_CdC_data_html)
materias_CdC
#Quitamos las entradas vacías
materias_CdC <- materias_CdC[materias_CdC!=""]
# Quitamos entradas con FB TWITTER ...
materias_CdC <- materias_CdC[1:78]
materias_CdC
# Quitamos entradas con FB TWITTER ...
materias_CdC <- materias_CdC[1:77]
materias_CdC
# Quitamos el número de grupos por materia
for(d in 1:length(materias_CdC)){
num_char <- nchar(materias_CdC[d])
texto <- substr(materias_CdC[d],(num_char-5),num_char)
if(texto==" grupo" || texto=="grupos"){#Menores a 10
materias_CdC[d] <- substr(materias_CdC[d],1,(num_char-10))
}
}#Fin for(d)
materias_CdC
#Quitamos las comas finales
for(d in 1:length(materias_CdC)){
num_char <- nchar(materias_CdC[d])
texto <- substr(materias_CdC[d],num_char,num_char)
if(texto==","){
materias_CdC[d] <- substr(materias_CdC[d],1,(num_char-1))
}
}#Fin for(d)
materias_CdC
save(materias_CdC, file = paste0("materias_CdC.RData"))
# Matemáticas -------------------------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/217
# div > a#Selecciona 134 materias
url <- paste0(raiz,217)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mate_data_html <- html_nodes(webpage,'div > a')#Selecciona 129 materias
materias_mate <- html_text(materias_mate_data_html)
materias_mate
# quita_num_gpos_x_materia ------------------------------------------------
quita_num_gpos_x_materia <- function(vec_materias){
# Quitamos el número de grupos por materia
for(d in 1:length(vec_materias)){
num_char <- nchar(vec_materias[d])
texto <- substr(vec_materias[d],(num_char-5),num_char)
if(texto==" grupo" || texto=="grupos"){#Menores a 10
vec_materias[d] <- substr(vec_materias[d],1,(num_char-10))
}
}#Fin for(d)
#Quitamos las comas finales
for(d in 1:length(vec_materias)){
num_char <- nchar(vec_materias[d])
texto <- substr(vec_materias[d],num_char,num_char)
if(texto==","){
vec_materias[d] <- substr(vec_materias[d],1,(num_char-1))
}
}#Fin for(d)
return(vec_materias)
}
# Matemáticas -------------------------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/217
# div > a#Selecciona 134 materias
url <- paste0(raiz,217)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mate_data_html <- html_nodes(webpage,'div > a')#Selecciona 129 materias
materias_mate <- html_text(materias_mate_data_html)
materias_mate
#Quitamos las entradas vacías
materias_mate <- materias_mate[materias_mate!=""]
materias_mate
# Quitamos entradas con FB TWITTER ...
materias_mate <- materias_mate[1:128]
materias_mate
materias_mate <- quita_num_gpos_x_materia(materias_mate)
materias_mate
# Matemáticas Aplicadas ---------------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/2055
# div > a#Selecciona 74 materias
url <- paste0(raiz,2055)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mateAp_data_html <- html_nodes(webpage,'div > a')#Selecciona 69 materias
materias_mateAp <- html_text(materias_mateAp_data_html)
materias_mateAp
length(materias_act)
# Matemáticas Aplicadas ---------------------------------------------------
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/2055
# div > a#Selecciona 74 materias
url <- paste0(raiz,2055)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mateAp_data_html <- html_nodes(webpage,'div > a')#Selecciona 69 materias
materias_mateAp <- html_text(materias_mateAp_data_html)
materias_mateAp
#Quitamos las entradas vacías
materias_mateAp <- materias_mateAp[materias_mateAp!=""]
materias_mateAp
materias_mateAp <- quita_num_gpos_x_materia(materias_mateAp)
materias_mateAp
# Quitamos entradas con FB TWITTER ...
materias_mateAp <- materias_mateAp[1:68]#68 materias
materias_mateAp <- quita_num_gpos_x_materia(materias_mateAp)
materias_mateAp
# quita_num_gpos_x_materia ------------------------------------------------
#' Title quita_num_gpos_x_materia: Función que se encarga de limpiar los
#' nombres de las materias de "vec_materias".
#'
#' @param vec_materias: Vector con los nombres de las materias, con el
#' número de grupos por cada materia.
#'
#' @return vec_materias: Vector con los nombres de las materias, sin el
#' número de grupos por cada materia.
#'
#' @examples
#' quita_num_gpos_x_materia(materias_act)
#' quita_num_gpos_x_materia(materias_CdC)
#' quita_num_gpos_x_materia(materias_mate)
#' quita_num_gpos_x_materia(materias_mateAp)
#'
quita_num_gpos_x_materia <- function(vec_materias){
# Quitamos el número de grupos por materia
for(d in 1:length(vec_materias)){
num_char <- nchar(vec_materias[d])
texto <- substr(vec_materias[d],(num_char-5),num_char)
if(texto==" grupo" || texto=="grupos"){#Menores a 10
vec_materias[d] <- substr(vec_materias[d],1,(num_char-10))
}
}#Fin for(d)
#Quitamos las comas finales
for(d in 1:length(vec_materias)){
num_char <- nchar(vec_materias[d])
texto <- substr(vec_materias[d],num_char,num_char)
if(texto==","){
vec_materias[d] <- substr(vec_materias[d],1,(num_char-1))
}
}#Fin for(d)
return(vec_materias)
}
# guarda_info_materias_x_carrera -------------------------------------------
#' Title guarda_info_materias_x_carrera: Función que extrae los nombres de
#' las materias de cada carrera del Depto. de Mate (Actuaría, CdC, Mate y
#' MateAp) en un vector. Dicho vector lo guarda.
#'
#' @examples
#' guarda_info_materias_x_carrera()
#'
guarda_info_materias_x_carrera <- function(){
raiz <- "http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/"
### Actuaría ###
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/2017
# div > a #Código SelectorGadget Selecciona 96 materias
url <- paste0(raiz,2017)
# Sacamos la información de la página
webpage <- read_html(url)
materias_act_data_html <- html_nodes(webpage,'div > a')
materias_act <- html_text(materias_act_data_html)
# materias_act
#Quitamos las entradas vacías
materias_act <- materias_act[materias_act!=""]
# Quitamos entradas con FB TWITTER ...
materias_act <- materias_act[1:90]#9 materias
materias_act <- quita_num_gpos_x_materia(materias_act)
save(materias_act, file = paste0("materias_act.RData"))
### Ciencias de la Computación ###
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/1556
# div > a#Selecciona 83 materias
url <- paste0(raiz,1556)
# Sacamos la información de la página
webpage <- read_html(url)
materias_CdC_data_html <- html_nodes(webpage,'div > a')
materias_CdC <- html_text(materias_CdC_data_html)
# materias_CdC
#Quitamos las entradas vacías
materias_CdC <- materias_CdC[materias_CdC!=""]
# Quitamos entradas con FB TWITTER ...
materias_CdC <- materias_CdC[1:77]#77 materias
materias_CdC <- quita_num_gpos_x_materia(materias_CdC)
save(materias_CdC, file = paste0("materias_CdC.RData"))
### Matemáticas ###
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/217
# div > a#Selecciona 134 materias
url <- paste0(raiz,217)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mate_data_html <- html_nodes(webpage,'div > a')
materias_mate <- html_text(materias_mate_data_html)
# materias_mate
#Quitamos las entradas vacías
materias_mate <- materias_mate[materias_mate!=""]
# Quitamos entradas con FB TWITTER ...
materias_mate <- materias_mate[1:128]#128 materias
materias_mate <- quita_num_gpos_x_materia(materias_mate)
save(materias_mate, file = paste0("materias_mate.RData"))
### Matemáticas Aplicadas ###
# http://www.fciencias.unam.mx/docencia/horarios/indiceplan/20201/2055
# div > a#Selecciona 74 materias
url <- paste0(raiz,2055)
# Sacamos la información de la página
webpage <- read_html(url)
materias_mateAp_data_html <- html_nodes(webpage,'div > a')
materias_mateAp <- html_text(materias_mateAp_data_html)
# materias_mateAp
#Quitamos las entradas vacías
materias_mateAp <- materias_mateAp[materias_mateAp!=""]
# Quitamos entradas con FB TWITTER ...
materias_mateAp <- materias_mateAp[1:68]#68 materias
materias_mateAp <- quita_num_gpos_x_materia(materias_mateAp)
save(materias_mateAp, file = paste0("materias_mateAp.RData"))
}
guarda_info_materias_x_carrera()
