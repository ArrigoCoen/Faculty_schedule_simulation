#                                 mean=mixmdl_1_esqueleto$mu)
mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
k=length(mixmdl_1_esqueleto$mu),
mean=mixmdl_1_esqueleto$mu)
hist(wait_mat_esqueleto_final,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto_final), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
length(mixmdl_1_esqueleto$mu
)
# mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
#                                 mean=mixmdl_1_esqueleto$mu)
mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
k=length(mixmdl_1_esqueleto_4$mu),
mean=mixmdl_1_esqueleto_4$mu)
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
mixmdl_1_esqueleto <- normalmixEM(wait_mat_esqueleto,k = 4)
hist(wait_mat_esqueleto,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_1_esqueleto$mu,sd = mixmdl_1_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
k=length(mixmdl_1_esqueleto$mu),
mean=mixmdl_1_esqueleto$mu)
hist(wait_mat_esqueleto_final,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto_final), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
length(wait_mat_esqueleto_final)
##Convertimos los datos para obtener la distribución por horas
wait_mat_esqueleto <- 0
Horas <- param$Horas
for(h in 1:length(Horas)){
cat("\n h = ",h)
suma_x_hra <- sum(mat_esqueleto[h,])
cat("\n suma_x_hra = ",suma_x_hra)
if(suma_x_hra > 0){
wait_mat_esqueleto <- c(wait_mat_esqueleto,rep(Horas[h],suma_x_hra))
}
cat("\n wait_mat_esqueleto = ",wait_mat_esqueleto)
}
#Quitamos el cero inicial
wait_mat_esqueleto <- wait_mat_esqueleto[-1]
#' Definimos las listas en las que vamos a guardar el número de grupos por materia
#' y los modelos de mezcla de normales para cada esqueleto
mat_gpos_x_materia <- matrix(0,nrow = n_rep,ncol = dim(mat_esqueleto)[2])
mat_gpos_x_materia[1,] <- colSums(mat_esqueleto)
mixmdl_1_esqueleto <- normalmixEM(wait_mat_esqueleto,k = 4)
hist(wait_mat_esqueleto,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_1_esqueleto$mu,sd = mixmdl_1_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
#Hacemos "n_rep" veces el proceso
for(d in 2:n_rep){
cat("d = ",d)
### Obtener D
D <- gen_mat_demanda_alumnos(param,param_sim)
prom_D <- prom_D + D
##Generar esqueleto
mat_solicitudes <- gen_solicitudes(param)
lista_info_esqueleto <- gen_esqueleto(D,mat_solicitudes,param)
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_gpos_x_materia[d,] <- colSums(mat_esqueleto)
# lista_de_lista_info_esqueleto[[d]] <- lista_info_esqueleto
##Convertimos los datos para obtener la distribución por horas
for(h in 1:length(Horas)){
suma_x_hra <- sum(mat_esqueleto[h,])
if(suma_x_hra > 0){
wait_mat_esqueleto <- c(wait_mat_esqueleto,rep(Horas[h],suma_x_hra))
}
}
}#Fin for(d)
mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
k=length(mixmdl_1_esqueleto$mu),
mean=mixmdl_1_esqueleto$mu)
wait_mat_esqueleto_final <- wait_mat_esqueleto
length(wait_mat_esqueleto_final)
hist(wait_mat_esqueleto_final,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto_final), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
hist(wait_mat_esqueleto_final,freq = F,breaks = seq(6,22,by = 1),
ylim = c(0,0.15))
hist(wait_mat_esqueleto_final,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
lines(density(wait_mat_esqueleto_final), lty=1,lwd=2,col = "green")
legend(15,0.15,c("GMM","density()"),bty = "n",
col=c("blue","green"),lty=c(1,1),
cex=1.1,lwd=2)
source("Fn_Asignacion.R")
n_rep <- 5
lista_esq_D_prima_B <- metodo_B(n_rep,param,param_sim)#5.32 min
mat_esqueleto_B <- lista_esq_D_prima_B[[1]]
D_prima_B <- lista_esq_D_prima_B[[2]]
View(mat_esqueleto_B)
source("Fn_Asignacion.R")
# Gráfica de metodología D ------------------------------------------------
n_rep <- 5
n_calif <- 10
mat_calif_D <- matrix(0,nrow = n_calif,ncol = dim(D)[2])
# D <- gen_mat_demanda_alumnos(param,param_sim)#41.03 seg
# View(D)
ind_materias <- 1:dim(D0)[2]
ptm <- proc.time()# Start the clock!
for(d in 1:n_calif){
cat("\n***RENGLÓN ",d," ***")
lista_esq_D_prima <- metodo_D(n_rep,param,param_sim)
D_prima <- lista_esq_D_prima[[2]]
mat_calif_x_gpo <- matrix(0, nrow = dim(D)[1], ncol = dim(D)[2])
calif_D <- actualiza_calif_D(D0,D_prima,mat_calif_x_gpo,ind_materias)
vec_calif_x_materia <- calif_D[[2]]
mat_calif_D[d,] <- vec_calif_x_materia
}
cat("\nEl ciclo tardó: ",(proc.time()-ptm)[3]/60," minutos\n")
colnames(mat_calif_D) <- param$vec_nom_materias_total
matplot(mat_calif_D, type = "l",main = "Metodología D",
xlab = "Iteraciones",
ylab = "Calificación")
save(mat_calif_D,file = "mat_calif_D.RData")
matplot(mat_calif_A, type = "l",main = "Metodología A",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-5,1))
matplot(mat_calif_B, type = "l",main = "Metodología B",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-1,1))
matplot(mat_calif_B, type = "l",main = "Metodología B",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-0.5,1))
matplot(mat_calif_B, type = "l",main = "Metodología B",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-0.5,0.8))
matplot(mat_calif_B, type = "l",main = "Metodología B",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-0.5,0.9))
matplot(mat_calif_B, type = "l",main = "Metodología B",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-0.5,1))
matplot(mat_calif_C, type = "l",main = "Metodología C",xlab = "Iteraciones",
ylab = "Calificación",ylim = c(-0.5,1))
min(mat_calif_D)
max(mat_calif_D)
# heatmaps ----------------------------------------------------------------
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(50)
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
# heatmaps ----------------------------------------------------------------
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c("min", "media", "max"),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c("min", "media", "max"),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c("min", "media", "max"),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c("min", "media", "max"),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(min(mat_calif_A),mean(mat_calif_A),
max(mat_calif_A)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(min(mat_calif_A),
round(mean(mat_calif_A),2),
max(mat_calif_A)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(round(min(mat_calif_A),2),
round(mean(mat_calif_A),2),
round(max(mat_calif_A),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c(round(min(mat_calif_A),2),
round(mean(mat_calif_A),2),
round(max(mat_calif_A),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c(round(min(mat_calif_B),2),
round(mean(mat_calif_B),2),
round(max(mat_calif_B),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c(round(min(mat_calif_C),2),
round(mean(mat_calif_C),2),
round(max(mat_calif_C),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c(round(min(mat_calif_D),2),
round(mean(mat_calif_D),2),
round(max(mat_calif_D),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(paste0("min = ",round(min(mat_calif_A),2)),
round(mean(mat_calif_A),2),
round(max(mat_calif_A),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(paste0("min = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
round(max(mat_calif_A),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
round(max(mat_calif_A),2)),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
paste0("máx = ",round(max(mat_calif_A),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
paste0("máx = ",round(max(mat_calif_A),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_B),2)),
paste0("media = ",round(mean(mat_calif_B),2)),
paste0("máx = ",round(max(mat_calif_B),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_C),2)),
paste0("media = ",round(mean(mat_calif_C),2)),
paste0("máx = ",round(max(mat_calif_C),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_D),2)),
paste0("media = ",round(mean(mat_calif_D),2)),
paste0("máx = ",round(max(mat_calif_D),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
par(mfrow=c(2,2),cex=1) # set the plotting area into a 2*2 array
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
paste0("máx = ",round(max(mat_calif_A),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_B),2)),
paste0("media = ",round(mean(mat_calif_B),2)),
paste0("máx = ",round(max(mat_calif_B),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_C),2)),
paste0("media = ",round(mean(mat_calif_C),2)),
paste0("máx = ",round(max(mat_calif_C),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_D),2)),
paste0("media = ",round(mean(mat_calif_D),2)),
paste0("máx = ",round(max(mat_calif_D),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
par(mfrow=c(2,2),cex=1) # set the plotting area into a 2*2 array
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
paste0("máx = ",round(max(mat_calif_A),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_B),2)),
paste0("media = ",round(mean(mat_calif_B),2)),
paste0("máx = ",round(max(mat_calif_B),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_C),2)),
paste0("media = ",round(mean(mat_calif_C),2)),
paste0("máx = ",round(max(mat_calif_C),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_D),2)),
paste0("media = ",round(mean(mat_calif_D),2)),
paste0("máx = ",round(max(mat_calif_D),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
dev.off()#Para salir de la función par()
# heatmaps ----------------------------------------------------------------
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_calif_A, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología A")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_A),2)),
paste0("media = ",round(mean(mat_calif_A),2)),
paste0("máx = ",round(max(mat_calif_A),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_B, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología B")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_B),2)),
paste0("media = ",round(mean(mat_calif_B),2)),
paste0("máx = ",round(max(mat_calif_B),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_C, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología C")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_C),2)),
paste0("media = ",round(mean(mat_calif_C),2)),
paste0("máx = ",round(max(mat_calif_C),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
heatmap(mat_calif_D, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Métodología D")
legend(x="bottomright", legend=c(paste0("mín = ",round(min(mat_calif_D),2)),
paste0("media = ",round(mean(mat_calif_D),2)),
paste0("máx = ",round(max(mat_calif_D),2))),
fill=colorRampPalette(brewer.pal(8, "Blues"))(3))
n_rep
n_rep <- 10
### Obtener D_prima
D_prima_inicial <- gen_mat_demanda_alumnos(param,param_sim)#46.41 seg
##Generar esqueleto inicial
mat_solicitudes <- gen_solicitudes(param)#8.07 seg
lista_info_esqueleto <- gen_esqueleto(D_prima_inicial,mat_solicitudes,param)#13.35 seg
mat_esqueleto <- lista_info_esqueleto[[1]]
##Convertimos los datos para obtener la distribución por horas
wait_mat_esqueleto <- 0
Horas <- param$Horas
for(h in 1:length(Horas)){
cat("\n h = ",h)
suma_x_hra <- sum(mat_esqueleto[h,])
cat("\n suma_x_hra = ",suma_x_hra)
if(suma_x_hra > 0){
wait_mat_esqueleto <- c(wait_mat_esqueleto,rep(Horas[h],suma_x_hra))
}
cat("\n wait_mat_esqueleto = ",wait_mat_esqueleto)
}
##Convertimos los datos para obtener la distribución por horas
wait_mat_esqueleto <- 0
Horas <- param$Horas
for(h in 1:length(Horas)){
# cat("\n h = ",h)
suma_x_hra <- sum(mat_esqueleto[h,])
# cat("\n suma_x_hra = ",suma_x_hra)
if(suma_x_hra > 0){
wait_mat_esqueleto <- c(wait_mat_esqueleto,rep(Horas[h],suma_x_hra))
}
# cat("\n wait_mat_esqueleto = ",wait_mat_esqueleto)
}
#Quitamos el cero inicial
wait_mat_esqueleto <- wait_mat_esqueleto[-1]
#' Definimos las listas en las que vamos a guardar el número de grupos por materia
#' y los modelos de mezcla de normales para cada esqueleto
mat_gpos_x_materia <- matrix(0,nrow = n_rep,ncol = dim(mat_esqueleto)[2])
mat_gpos_x_materia[1,] <- colSums(mat_esqueleto)
mixmdl_1_esqueleto <- normalmixEM(wait_mat_esqueleto,k = 4)
hist(wait_mat_esqueleto,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(wait_mat_esqueleto), lty=1,lwd=2,col = "green")
wait_mat_esqueleto_inicial <- wait_mat_esqueleto
hist(wait_mat_esqueleto_inicial,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
lines(density(wait_mat_esqueleto_inicial), lty=1,lwd=2,col = "green")
hist(wait_mat_esqueleto_inicial,freq = F,breaks = seq(5,22,by = 1),
ylim = c(0,0.15))
hist(wait_mat_esqueleto_inicial,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
save(wait_mat_esqueleto_inicial,file = "wait_mat_esqueleto_inicial.RData")
#Hacemos "n_rep" veces el proceso
for(d in 2:n_rep){
cat("d = ",d)
### Obtener D
D <- gen_mat_demanda_alumnos(param,param_sim)
prom_D <- prom_D + D
##Generar esqueleto
mat_solicitudes <- gen_solicitudes(param)
lista_info_esqueleto <- gen_esqueleto(D,mat_solicitudes,param)
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_gpos_x_materia[d,] <- colSums(mat_esqueleto)
# lista_de_lista_info_esqueleto[[d]] <- lista_info_esqueleto
##Convertimos los datos para obtener la distribución por horas
for(h in 1:length(Horas)){
suma_x_hra <- sum(mat_esqueleto[h,])
if(suma_x_hra > 0){
wait_mat_esqueleto <- c(wait_mat_esqueleto,rep(Horas[h],suma_x_hra))
}
}
}#Fin for(d)
mixmdl_esqueleto <- normalmixEM(wait_mat_esqueleto,
k=length(mixmdl_1_esqueleto$mu),
mean=mixmdl_1_esqueleto$mu)
prom_gpos_x_materia <- ceiling(colMeans(mat_gpos_x_materia))
wait_mat_esqueleto_final <- wait_mat_esqueleto
hist(wait_mat_esqueleto_final,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
legend(15,0.15,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(10,0.15,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
hist(wait_mat_esqueleto_final,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
legend(10,0.15,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
hist(wait_mat_esqueleto_final,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
legend(15,0.10,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
hist(wait_mat_esqueleto_final,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
legend(12,0.12,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(2,0.15,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(2,0.2,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(2,0.16,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(2,0.18,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
legend(5,0.17,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
hist(wait_mat_esqueleto_final,freq = F,
breaks = seq(5,22,by = 1),
main = "Histograma de grupos en un esqueleto",
xlab = "Horas",ylab = "Frecuencia relativa",
ylim = c(0,0.15))
lines(density(rnorm(1000,mean = mixmdl_esqueleto$mu,
sd = mixmdl_esqueleto$sigma)),
lty=1,lwd=2,col = "blue")
legend(5,0.17,
c("Densidad ajustada por modelo de mezcla de normales"),
bty = "n",
col=c("blue"),lty=1,
cex=1.1,lwd=2)
save(wait_mat_esqueleto_final,file = "wait_mat_esqueleto_final.RData")
