m
m2 <- m-1
m2
m/m2
m/m2[m2>0]
m2[m2>0]
m2>0
m/(m2>0)
m
m2
m/m2
m
m2
m/m2
m[m2!=0]
m2[m2!=0]
m[m2!=0]/m2[m2!=0]
m/m2[m2!=0]
m/m2!=0
m/(m2!=0)
m2!=0
m3 <- matrix(0,3,3)
# mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
for(c in 1:dim(m)[2]){
for(r in 1:dim(m)[1]){
if(m2[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
m3[r,c] <- m[r,c]/m2[r,c]
}else{
m3[r,c] <- 0
}
}
}
m3
# m3 <- matrix(0,3,3)
mat_porcentajes <- matrix(0,dim(mat_demanda_aux)[1],dim(mat_demanda_aux)[2])
for(c in 1:dim(mat_demanda_aux)[2]){
for(r in 1:dim(mat_demanda_aux)[1]){
if(mat_demanda_alumnos[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/
mat_porcentajes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else{
mat_porcentajes[r,c] <- 0
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_diferencias <- mat_demanda_alumnos - mat_demanda_aux
heatmap(mat_diferencias, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_dif_rel <- (mat_demanda_alumnos - mat_demanda_aux)/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_dif_rel, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(mat_porcentajes)
hist(mat_porcentajes,col=param_graficas$col1_hist,breaks = seq(-250,0,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos sobrantes",xlab = "Número alumnos")
as.vector(mat_porcentajes)
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-250,0,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
min(mat_porcentajes)
max(mat_porcentajes)
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-100,10,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-100,10,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-100,10,by = 10),
freq = F,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
set.seed(1806)
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
calif_esqueleto <- 0
set.seed(9293)#6.68seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
set.seed(0802)#5.76seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
set.seed(236776)#5.66seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
set.seed(132934)#4.82seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
#Se definen las variables que se van a utilizar
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
set.seed(0.1806)#4.9seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
set.seed(1806)#6.68seg
mat_demanda_alumnos <- gen_mat_demanda_alumnos(param,param_sim)#44.84 seg
set.seed(1806)#6.68seg
mat_solicitudes <- gen_solicitudes(param)#8.14 seg
set.seed(1806)#6.68seg
# set.seed(9293)#5.76seg
# set.seed(0802)#5.66seg
# set.seed(236776)#4.82seg
# set.seed(132934)#4.9seg
# set.seed(0.1806)#5.39seg
lista_info_esqueleto <- gen_esqueleto(mat_demanda_alumnos,mat_solicitudes,
param)#16.73/10.27/13.34/9.25/8.65seg
vec_nom_materias_total <- param$vec_nom_materias_total
mat_esqueleto <- lista_info_esqueleto[[1]]
mat_prof_TC <- lista_info_esqueleto[[2]]
# mat_prof_asig <- lista_info_esqueleto[[3]]
mat_demanda_aux <- lista_info_esqueleto[[4]]
mat_solicitudes_TC <- lista_info_esqueleto[[5]]
mat_solicitudes_asignatura <- lista_info_esqueleto[[6]]
(num_alum_simulados <- lista_info_esqueleto[[7]])#19804
calif_esqueleto <- 0
#' Penalización por no tener en el esqueleto una materia que necesitamos.
#' Se resta 1 por cada materia no impartida.
materias_no_impartidas <- 0
nom_materias_no_impartidas <- 0
for(c in 1:dim(mat_esqueleto)[2]){#Se recorren las columnas
suma_col <- sum(mat_demanda_alumnos[,c])
if(suma_col!=0 && sum(mat_demanda_aux[,c])>=suma_col){
materias_no_impartidas <- materias_no_impartidas + 1
nom_materias_no_impartidas <- c(nom_materias_no_impartidas,
vec_nom_materias_total[c])
# cat("\n No fue impartida la materia: ",vec_nom_materias_total[c])
}
}
materias_no_impartidas#56
materias_no_impartidas#31
#Quitamos el cero inicial
nom_materias_no_impartidas <- nom_materias_no_impartidas[-1]
nom_materias_no_impartidas
#' Penalización por cada alumno faltante: Se suma el número de alumnos
#' que quedaron en la matriz "mat_demanda_aux". Se multiplica alfa
#' por el número de alumnos faltantes
alfa <- 0.5
(num_alum_faltantes <- sum(mat_demanda_aux[mat_demanda_aux>0]))#21955
(pena_faltantes <- alfa*num_alum_faltantes)#10,977.5
#' Penalización por cada alumno sobrante: El número de alumnos
#' sobrantes es el número de alumnos simulados menos el número de
#' alumnos asignados (alumnos requeridos - alumnos faltantes)
#' Se multiplica el número de alumnos sobrantes por beta.
beta <- 0.8
(num_alum_requeridos <- sum(mat_demanda_alumnos))#34,955
(num_alum_asignados <- num_alum_requeridos-num_alum_faltantes)#13,000
# (num_alum_sobrantes <- max(0,num_alum_simulados-num_alum_asignados))#10,354
(num_alum_sobrantes <- -sum(mat_demanda_aux[mat_demanda_aux<0]))#6,804
(pena_sobrantes <- beta*num_alum_sobrantes)#5443.2
# (num_alum_requeridos <- sum(mat_demanda_alumnos))#34,955
# (num_alum_asignados <- num_alum_requeridos-num_alum_faltantes)#13,000
# (num_alum_sobrantes <- max(0,num_alum_simulados-num_alum_asignados))#10,354
(num_alum_sobrantes <- -sum(mat_demanda_aux[mat_demanda_aux<0]))#6,804
(pena_sobrantes <- beta*num_alum_sobrantes)#5443.2
#' Notas:
#' 1) Se cuenta por materia solicitada, no por materia con
#' horario. Ej. Si se pidió Proba I a las 10hrs y a las 11hrs,
#' sólo se cuenta una penalización.
#' 2) Se penaliza por cada materia con tope a 2 asignaciones,
#' i.e. si un profesor pidió 3 o más  materias y sólo le dieron 1,
#' entonces se penaliza 1; si le dieron 2 entonces no hay
#' penalización.
# mat_prof_TC_menor_2 <- mat_prof_TC[mat_prof_TC[,2]<=1,]
# mat_solicitudes_TC_aux <- unique(mat_solicitudes_TC[,c(1,3,4)])
pena_x_materia <- 0
mat_prof_TC_igual_1 <- mat_prof_TC[mat_prof_TC[,2]==1,]
mat_prof_TC_igual_0 <- mat_prof_TC[mat_prof_TC[,2]==0,]
## Una materia
for(r in 1:dim(mat_prof_TC_igual_1)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_1[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 1
}
}
## Dos materias
for(r in 1:dim(mat_prof_TC_igual_0)[1]){#Recorre los renglones
nom_prof <- mat_prof_TC_igual_0[r,1]
if(any(nom_prof == mat_solicitudes_TC[,1])){
pena_x_materia <- pena_x_materia + 2
}
}
pena_x_materia##57
#' Si hay alumnos que necesitan una clase a alguna hora y no
#' existe profesor que la imparta. Se penaliza por cada profesor
#' que pueda impartir la materia j en la hora i y esa entrada de
#' la matriz "mat_demanda_aux" aún tenga alumnos.
# media_alum <- 34.18746
mat_solicitudes <- rbind(mat_solicitudes_TC,mat_solicitudes_asignatura)
mat_i_j <- matrix(0,nrow = dim(mat_solicitudes)[1],ncol = 2)
pena_alum_sin_clase <- 0
for(r in 1:dim(mat_solicitudes)[1]){#Recorre los renglones
#' Se llenan los índices en los que un profesor puede dar
#' la materia j en la hora i
ind_hora <- which(7:21 == mat_solicitudes[r,5])
mat_i_j[r,] <- c(ind_hora,mat_solicitudes[r,4])
}
colnames(mat_i_j) <- c("i","j")
for(r in 1:dim(mat_i_j)[1]){
i <- as.numeric(mat_i_j[r,1])
j <- as.numeric(mat_i_j[r,2])
if(mat_demanda_aux[i,j] > 0){
pena_alum_sin_clase <- pena_alum_sin_clase + 1
}
}
pena_alum_sin_clase#49
calif_esqueleto <- -sum(materias_no_impartidas,pena_faltantes,pena_sobrantes,
pena_x_materia,pena_alum_sin_clase)
calif_esqueleto
# Tabla -------------------------------------------------------------------
tabla_info <- data.frame(Materia = vec_nom_materias_total,Num_Al_Sobra = 0,
Num_Al_Falta = 0,Num_Exactas = 0)
## El número de alumnos sobrantes se representa con números negativos.
for(d in 1:dim(tabla_info)[1]){
#Recorre renglones de la tabla, columnas de la matriz
tabla_info[d,2] <- sum(mat_demanda_aux[mat_demanda_aux[,d]<0,d])
tabla_info[d,3] <- sum(mat_demanda_aux[mat_demanda_aux[,d]>0,d])
ceros_antes <- length(mat_demanda_alumnos[mat_demanda_alumnos[,d]==0,d])
ceros_despues <- length(mat_demanda_aux[mat_demanda_aux[,d]==0,d])
tabla_info[d,4] <- ceros_despues - ceros_antes
}
View(tabla_info)
# Gráficas ----------------------------------------------------------------
sobran_mas_faltan <- as.numeric(tabla_info[,2] + tabla_info[,3])
# mat_sobran_mas_faltan <- cbind(tabla_info[,1],sobran_mas_faltan)
mat_sobran_mas_faltan <- data.frame(Materias = vec_nom_materias_total,
Suma_Sobran_Faltan = sobran_mas_faltan)
mat_sobran_mas_faltan <- mat_sobran_mas_faltan[order(mat_sobran_mas_faltan[,2]),]
mean(mat_sobran_mas_faltan[,2])
plot(as.numeric(sort(tabla_info[,2])))#Sobrantes
plot(as.numeric(sort(tabla_info[,2])))#Sobrantes
plot(as.numeric(sort(tabla_info[,3])))#Faltantes
plot(as.numeric(mat_sobran_mas_faltan[,2]))#Suma
# Histogramas -------------------------------------------------------------
vec_sobrantes <- as.numeric(sort(tabla_info[,2]))
min(vec_sobrantes)#-242
max(vec_sobrantes)#0
hist(vec_sobrantes,col=param_graficas$col1_hist,breaks = seq(-410,0,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos sobrantes",xlab = "Número alumnos")
vec_faltantes <- as.numeric(sort(tabla_info[,3]))
min(vec_faltantes)#0
max(vec_faltantes)#1155
hist(vec_faltantes,col=param_graficas$col1_hist,breaks = seq(0,780,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos faltantes",xlab = "Número alumnos")
vec_exactos <- as.numeric(sort(tabla_info[,4]))
min(vec_exactos)#0
max(vec_exactos)#1
hist(vec_exactos,col=param_graficas$col1_hist,breaks = seq(0,10,by = 1),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos exactos",xlab = "Número alumnos")
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-250,1160,by = 10),freq = F,#ylim=c(0,0.02),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,#ylim=c(0,0.02),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(-250,1160,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,#ylim=c(0,0.02),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(-410,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,#ylim=c(0,0.02),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.08),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_porcentajes <- matrix(0,dim(mat_demanda_aux)[1],dim(mat_demanda_aux)[2])
for(c in 1:dim(mat_demanda_aux)[2]){
for(r in 1:dim(mat_demanda_aux)[1]){
if(mat_demanda_alumnos[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/
mat_porcentajes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else{
mat_porcentajes[r,c] <- 0
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
min(mat_porcentajes)#-97
mat_porcentajes <- matrix(0,dim(mat_demanda_aux)[1],dim(mat_demanda_aux)[2])
for(c in 1:dim(mat_demanda_aux)[2]){
for(r in 1:dim(mat_demanda_aux)[1]){
if(mat_demanda_alumnos[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/
mat_porcentajes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else{
mat_porcentajes[r,c] <- 0
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
min(mat_porcentajes)#-97
max(mat_porcentajes)#1
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-100,10,by = 10),
freq = F,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
hist(as.vector(mat_porcentajes),col=param_graficas$col1_hist,breaks = seq(-80,10,by = 10),
freq = F,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma mat_porcentajes",xlab = "Número alumnos")
mat_diferencias <- mat_demanda_alumnos - mat_demanda_aux
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_diferencias, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_dif_rel <- (mat_demanda_alumnos - mat_demanda_aux)/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_dif_rel, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(tabla_info)
plot(as.numeric(sort(tabla_info[,2])))#Sobrantes
plot(as.numeric(sort(tabla_info[,3])))#Faltantes
plot(as.numeric(mat_sobran_mas_faltan[,2]))#Suma
plot(as.numeric(mat_sobran_mas_faltan[,2]),
main="Suma de alumnos sobrantes mas faltantes",
xlab = "Número alumnos",ylab = "Suma")#Suma
plot(as.numeric(sort(tabla_info[,2])),main="Número de alumnos sobrantes",
xlab = "Número alumnos",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(tabla_info[,3])),main="Número de alumnos faltantes",
xlab = "Número alumnos",ylab = "Alumnos faltantes")#Faltantes
plot(as.numeric(mat_sobran_mas_faltan[,2]),
main="Suma de alumnos sobrantes mas faltantes",
xlab = "Número alumnos",ylab = "Suma")#Suma
plot(as.numeric(sort(tabla_info[,2])),main="Número de alumnos sobrantes",
xlab = "Materias",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(tabla_info[,3])),main="Número de alumnos faltantes",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes
plot(as.numeric(mat_sobran_mas_faltan[,2]),
main="Suma de alumnos sobrantes mas faltantes",
xlab = "Materias",ylab = "Suma")#Suma
plot(as.numeric(sort(tabla_info[,2])),main="Número de alumnos sobrantes",
xlab = "Materias",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(tabla_info[,3])),main="Número de alumnos faltantes",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes
plot(as.numeric(mat_sobran_mas_faltan[,2]),
main="Suma de alumnos sobrantes mas faltantes",
xlab = "Materias",ylab = "Suma")#Suma
# Histogramas -------------------------------------------------------------
vec_sobrantes <- as.numeric(sort(tabla_info[,2]))
View(mat_sobran_mas_faltan)
hist(vec_sobrantes,col=param_graficas$col1_hist,breaks = seq(-410,0,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos sobrantes",xlab = "Número alumnos")
hist(vec_faltantes,col=param_graficas$col1_hist,breaks = seq(0,780,by = 10),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos faltantes",xlab = "Número alumnos")
vec_exactos <- as.numeric(sort(tabla_info[,4]))
min(vec_exactos)#0
max(vec_exactos)#2
hist(vec_exactos,col=param_graficas$col1_hist,breaks = seq(0,10,by = 1),
freq = T,ylab = "Frecuencia",#ylim=c(0,0.025),
main="Histograma alumnos exactos",xlab = "Número alumnos")
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(300,0.02,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
legend(500,0.02,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(500,0.02,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
# lines(density(vec_faltantes),col=param_graficas$col2_linea,
#       lwd=param_graficas$lwd_dens)
legend(400,0.02,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
