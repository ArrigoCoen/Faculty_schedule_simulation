mat_sobran_faltan_razon <- data.frame(Materias = vec_nom_materias_total,
Sobran_Razon = sobran_razon,
Faltan_Razon = faltan_razon)
# mat_sobran_mas_faltan_razon <- mat_sobran_mas_faltan_razon[order(
#   mat_sobran_mas_faltan_razon[,2]),]
View(mat_sobran_mas_faltan_razon)
View(mat_sobran_mas_faltan_razon)
mean(mat_sobran_faltan_razon[,2])#Inf
View(mat_sobran_faltan_razon)
plot(as.numeric(sort(mat_sobran_faltan_razon[,2])),main="Número de alumnos sobrantes",
xlab = "Materias",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(mat_sobran_faltan_razon[,3])),main="Número de alumnos faltantes",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes
plot(as.numeric(sort(mat_sobran_faltan_razon[,2])),main="Número de alumnos sobrantes",
xlab = "Materias",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(mat_sobran_faltan_razon[,2])),main="Número de alumnos sobrantes",
xlab = "Materias",ylab = "Alumnos sobrantes entre demanda")#Sobrantes
plot(as.numeric(sort(mat_sobran_faltan_razon[,2])),
main="Número de alumnos sobrantes entre demanda",
xlab = "Materias",ylab = "Alumnos sobrantes")#Sobrantes
plot(as.numeric(sort(mat_sobran_faltan_razon[,3])),
main="Número de alumnos faltantes entre demanda",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
# lines(density(vec_sobrantes),col=param_graficas$col1_linea,
#       lwd=param_graficas$lwd_dens)
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(400,0.02,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
#************************************************************
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(400,0.03,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
vec_sobrantes
hist(vec_sobrantes[vec_sobrantes<0], col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_faltantes[vec_faltantes>0],col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes[vec_sobrantes<0], col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.04),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_faltantes[vec_faltantes>0],col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
hist(vec_sobrantes[vec_sobrantes<0], col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.03),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_faltantes[vec_faltantes>0],col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(400,0.03,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
hist(vec_sobrantes[vec_sobrantes<0], col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.03),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes sin ceros")
hist(vec_faltantes[vec_faltantes>0],col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
legend(400,0.03,c("Alumnos sobrantes","Alumnos faltantes"),bty = "n",
col=c(param_graficas$col1_linea,param_graficas$col2_linea),
lty=c(1,1),cex=1.1,lwd=param_graficas$lwd_dens)
mat_dif_rel <- (mat_demanda_alumnos - mat_demanda_aux)/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_dif_rel, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_diferencias <- mat_demanda_alumnos - mat_demanda_aux
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_diferencias, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
mat_porcentajes <- matrix(0,dim(mat_demanda_aux)[1],dim(mat_demanda_aux)[2])
for(c in 1:dim(mat_demanda_aux)[2]){
for(r in 1:dim(mat_demanda_aux)[1]){
if(mat_demanda_alumnos[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/
mat_porcentajes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else{
mat_porcentajes[r,c] <- 0
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes sin infinitos")
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(mat_porcentajes)
mat_porcentajes <- matrix(0,dim(mat_demanda_aux)[1],dim(mat_demanda_aux)[2])
for(c in 1:dim(mat_demanda_aux)[2]){
for(r in 1:dim(mat_demanda_aux)[1]){
if(mat_demanda_alumnos[r,c]!=0){
# mat_porcentajes <- mat_demanda_aux/
mat_porcentajes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else{
mat_porcentajes[r,c] <- Inf
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes sin infinitos")
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(mat_porcentajes)
vec_faltantes[vec_faltantes>0]
39/121
39/121
plot(as.numeric(sort(mat_sobran_faltan_razon[,3])),
main="Número de alumnos faltantes entre demanda",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes*****
View(mat_sobran_faltan_razon)
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==0,])
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==0,c(1,2)])
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==0,c(1,3)])
View(tabla_info[tabla_info[,3]>200,c(1,3,5)])
plot(as.numeric(sort(mat_sobran_faltan_razon[,3])),
main="Número de alumnos faltantes entre demanda",
xlab = "Materias",ylab = "Alumnos faltantes")#Faltantes*****
sobran_razon <- rep(0,length(vec_nom_materias_total))
faltan_razon <- rep(0,length(vec_nom_materias_total))
for(d in 1:length(vec_nom_materias_total)){
if(tabla_info[d,5] == 0){
sobran_razon[d] <- Inf
faltan_razon[d] <- Inf
}else{
sobran_razon[d] <- vec_alum_sobrantes[d]/tabla_info[d,5]
faltan_razon[d] <- vec_alum_faltantes[d]/tabla_info[d,5]
}
}
mat_sobran_faltan_razon <- data.frame(Materias = vec_nom_materias_total,
Sobran_Razon = sobran_razon,
Faltan_Razon = faltan_razon,
demanda_x_materia = tabla_info[d,5])
View(mat_sobran_faltan_razon)
mat_sobran_faltan_razon <- data.frame(Materias = vec_nom_materias_total,
Sobran_Razon = sobran_razon,
Faltan_Razon = faltan_razon,
demanda_x_materia = tabla_info[,5])
View(mat_sobran_faltan_razon)
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==1,c(1,3,5)])
mat_sobran_faltan_razon[,3]==1
mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==1,c(1,3,5)]
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==1,c(1,3,4)])
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,2]==0,c(1,2,4)])
View(mat_sobran_faltan_razon[mat_sobran_faltan_razon[,3]==0,c(1,3,4)])
hist(vec_sobrantes[vec_sobrantes<0], col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.03),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes sin ceros")
hist(vec_faltantes[vec_faltantes>0],col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
#************************************************************
hist(vec_sobrantes, col=param_graficas$col1_hist,
breaks = seq(-410,780,by = 10),freq = F,ylim=c(0,0.07),
ylab = "Frecuencia relativa",xlab = "Número alumnos",
# ylab = "Densidad",xlab = "Número alumnos",
main="Alumnos sobrantes y faltantes")
hist(vec_faltantes,col=param_graficas$col2_hist,
breaks = seq(0,780,by = 10),freq = F,add=TRUE)
length(vec_faltantes[vec_faltantes==0]
length(vec_faltantes[vec_faltantes==0])),
length(vec_faltantes[vec_faltantes==0])
length(vec_faltantes})
length(vec_faltantes)
length(vec_faltantes[vec_faltantes>0])
131+204
length(vec_sobrantes[vec_sobrantes==0])
length(vec_sobrantes[vec_sobrantes<0])
124+211
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),main = "Número de alumnos totales",ylim = c(0,30000),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("2008-1","","","","2010-1",
"","","","2012-1","",
"","","2014-1","","",
"","2016-1","","","",
"2018-1","","","","2020-1"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),main = "Número de alumnos totales",ylim = c(0,30000),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","!= 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,300),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","!= 0"))
sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0]))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,500),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","!= 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,450),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","!= 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,500),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","!= 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,500),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=2,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distinto de 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos totales",ylim = c(0,500),
xlab="Semestres",ylab="Número de alumnos",col = param_graficas$col_barras,
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distinto de 0"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
length(vec_sobrantes[vec_sobrantes<0]),#Sobrantes
length(vec_faltantes[vec_faltantes>0])),#Faltantes
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Sobrantes","Faltantes"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,450),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
50
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
length(vec_sobrantes[vec_sobrantes<0]),#Sobrantes
length(vec_faltantes[vec_faltantes>0])),#Faltantes
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Sobrantes","Faltantes"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos sobrantes o faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de alumnos sobrantes y faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
barplot(c(sum(length(vec_sobrantes[vec_sobrantes==0]),
length(vec_faltantes[vec_faltantes==0])),
sum(length(vec_sobrantes[vec_sobrantes<0]),
length(vec_faltantes[vec_faltantes>0]))),
main = "Número de grupos con alumnos sobrantes y faltantes",ylim = c(0,500),
ylab="Número de alumnos",col = param_graficas$col_barras,#xlab="Número de alumnos",
axis.lty=1,las=1,cex.names = 0.82,#expansion factor for *axis names*
cex.axis=0.82,#expansion factor for *numeric axis labels*
names.arg=c("Ceros","Distintos de cero"))
mat_porcentajes <- mat_demanda_aux/mat_demanda_alumnos
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
a
a <- matrix(c(1,2,3,-1,-2,-3,4,-5,6),3,3,byrow = T)
a
b <- matrix(c(1,0,3,0,-2,0,4,0,6),3,3,byrow = T)
b
a/b
a[a>0]/b
mat_porcentajes_sobrantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
mat_porcentajes_faltantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
dim(mat_porcentajes)
mat_porcentajes_sobrantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
mat_porcentajes_faltantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
for(c in 1:dim(mat_porcentajes)[2]){
for(r in 1:dim(mat_porcentajes)[1]){
if(mat_demanda_alumnos[r,c] == 0){
mat_porcentajes_sobrantes[r,c] <- Inf
mat_porcentajes_faltantes[r,c] <- Inf
}else if(mat_demanda_aux[r,c] <= 0){#Sobrantes
mat_porcentajes_sobrantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else if(mat_demanda_aux[r,c] >= 0){#Faltantes
mat_porcentajes_faltantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}
}
}
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_faltantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos faltantes")
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_faltantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos faltantes")
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(mat_porcentajes_sobrantes)
View(mat_demanda_aux)
View(mat_demanda_alumnos)
83/306
c <- 2
r <- 1
mat_demanda_alumnos[r,c]
mat_demanda_aux[r,c]
mat_demanda_aux[r,c] <= 0
mat_demanda_aux[r,c] >= 0
mat_demanda_alumnos[r,c]
mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
mat_porcentajes_sobrantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
mat_porcentajes_faltantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
for(c in 1:dim(mat_porcentajes)[2]){
for(r in 1:dim(mat_porcentajes)[1]){
if(mat_demanda_alumnos[r,c] == 0){
mat_porcentajes_sobrantes[r,c] <- Inf
mat_porcentajes_faltantes[r,c] <- Inf
}else{
if(mat_demanda_aux[r,c] <= 0){#Sobrantes
mat_porcentajes_sobrantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else if(mat_demanda_aux[r,c] >= 0){#Faltantes
mat_porcentajes_faltantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}
}
}#Fin for(r)
}#Fin for(c)
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_faltantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos faltantes")
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes y faltantes")
View(mat_porcentajes_sobrantes)
c <- 2
r <- 1
mat_demanda_alumnos[r,c]
mat_demanda_alumnos[r,c] == 0
mat_demanda_aux[r,c] <= 0
mat_porcentajes
mat_porcentajes[r,c]
mat_porcentajes[r,c]
mat_porcentajes[r,c] >= 0
mat_porcentajes_sobrantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
mat_porcentajes_faltantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
for(c in 1:dim(mat_porcentajes)[2]){
for(r in 1:dim(mat_porcentajes)[1]){
if(mat_demanda_alumnos[r,c] == 0){
mat_porcentajes_sobrantes[r,c] <- Inf
mat_porcentajes_faltantes[r,c] <- Inf
}else{
if(mat_demanda_aux[r,c] <= 0){#Sobrantes
#Cuando mat_demanda_aux[r,c]>0 => se queda un 0 en la entrada (r,c)
mat_porcentajes_sobrantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else if(mat_demanda_aux[r,c] >= 0){#Faltantes
#Cuando mat_demanda_aux[r,c]<0 => se queda un 0 en la entrada (r,c)
mat_porcentajes_faltantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}
}
}#Fin for(r)
}#Fin for(c)
rownames(mat_porcentajes_sobrantes) <- param$nombre_hrs
colnames(mat_porcentajes_sobrantes) <- param$vec_nom_materias_total
rownames(mat_porcentajes_faltantes) <- param$nombre_hrs
colnames(mat_porcentajes_faltantes) <- param$vec_nom_materias_total
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_faltantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos faltantes")
mat_porcentajes_sobrantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
mat_porcentajes_faltantes <- matrix(0,nrow = dim(mat_porcentajes)[1],
ncol = dim(mat_porcentajes)[2])
for(c in 1:dim(mat_porcentajes)[2]){
for(r in 1:dim(mat_porcentajes)[1]){
if(mat_demanda_alumnos[r,c] == 0){
mat_porcentajes_sobrantes[r,c] <- -Inf
mat_porcentajes_faltantes[r,c] <- Inf
}else{
if(mat_demanda_aux[r,c] <= 0){#Sobrantes
#Cuando mat_demanda_aux[r,c]>0 => se queda un 0 en la entrada (r,c)
mat_porcentajes_sobrantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}else if(mat_demanda_aux[r,c] >= 0){#Faltantes
#Cuando mat_demanda_aux[r,c]<0 => se queda un 0 en la entrada (r,c)
mat_porcentajes_faltantes[r,c] <- mat_demanda_aux[r,c]/mat_demanda_alumnos[r,c]
}
}
}#Fin for(r)
}#Fin for(c)
rownames(mat_porcentajes_sobrantes) <- param$nombre_hrs
colnames(mat_porcentajes_sobrantes) <- param$vec_nom_materias_total
rownames(mat_porcentajes_faltantes) <- param$nombre_hrs
colnames(mat_porcentajes_faltantes) <- param$vec_nom_materias_total
colMain <- colorRampPalette(brewer.pal(8, "Blues"))(25)
heatmap(mat_porcentajes_sobrantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos sobrantes")
heatmap(mat_porcentajes_faltantes, Colv = NA, Rowv = NA, scale="none",col=colMain,
main = "Porcentajes alumnos faltantes")
sum(mat_porcentajes_sobrantes)
sum(mat_porcentajes_sobrantes[mat_porcentajes_sobrantes>Inf])
sum(mat_porcentajes_sobrantes>Inf)
sum(mat_porcentajes_sobrantes>-Inf)
View(mat_porcentajes_sobrantes>-Inf)
View(mat_porcentajes_faltantes)
